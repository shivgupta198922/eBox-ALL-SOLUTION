#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node *link;
};

void push(struct node **, int);
void pop(struct node **);
void display(struct node *);
int count(struct node *);

int main() {
    struct node *top = NULL;
    int choice, data;

        printf("\nChoice 1 : To push data\nChoice 2 : To pop data\nChoice 3 : To display\nChoice 4 : To count\n\n");
    do {
        printf("Enter your choice\n");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter the data to be pushed\n");
                scanf("%d", &data);
                push(&top, data);
                break;
            case 2:
                pop(&top);
                break;
            case 3:
                display(top);
                break;
            case 4:
                printf("Number of elements in the linked list is %d\n", count(top));
                break;
            default:
                printf("END\n");
                exit(0);
                break;
        }
    } while(1);

    return 0;
}

void push(struct node **top, int data) {
    if(count(*top)==5)
    {
        printf("Overflow\n");
        return;
    }
    struct node *new_node = (struct node *)malloc(sizeof(struct node));
    new_node->data = data;
    new_node->link = *top;
    *top = new_node;
}

void pop(struct node **top) {
    if (*top == NULL) {
        printf("No element in the stack\n");
        return;
    }

    struct node *temp = *top;
    *top = (*top)->link;
    printf("Element Popped is %d\n", temp->data);
    free(temp);
}

void display(struct node *top) {
    printf("Linked List Contents\n");
    while (top != NULL) {
        printf("%d ", top->data);
        top = top->link;
    }
    printf("\n");
}

int count(struct node *top) {
    int count = 0;
    while (top != NULL) {
        count++;
        top = top->link;
    }
    return count;
}
