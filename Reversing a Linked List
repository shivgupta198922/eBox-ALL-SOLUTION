#include<stdio.h>
#include<stdlib.h>
struct node{
	int data;
	struct node *link;
};
void addatbeg(struct node **,  int);
void reverse (struct node **);
void display(struct node *);
int count(struct node *);

int main()
{
    struct node *p;
    p=NULL;
    int num;
	int ch;
	printf("Choice 1 : To add data in the beginning\n");
	printf("Choice 2 : To reverse the linked list\n");
	printf("Choice 3 : To display\n");
	printf("Choice 4 : To count\n");
do{
	printf("Enter your choice\n");
	scanf("%d",&ch);

switch(ch)
{
	case 1:
	printf("Enter the data to be added at the beginning\n");
	scanf("%d",&num);
	addatbeg (&p,  num);
	break;
	case 2:
	reverse(&p);
	break;
	case 3:
	display(p);
	break;
	case 4:
	printf("Number of elements in the linked list is %d\n",count(p));
	break;
	default:
	exit(0);
}
}while(1);	
	return 0;
}

void display(struct node*q){
	
	while(q !=NULL)
	{
		printf("%d ", q->data);
		q=q->link;
	}
printf("\n");
}
void addatbeg(struct node **q, int num)

{
 
	struct node *nn;
	nn=(struct node *)malloc(sizeof(struct node));

	nn->data=num;
	nn->link = *q;
	*q = nn;
	
}
void reverse(struct node **q)
{
	struct node *p;
	p=NULL;
	struct node *c;
	c=*q;
	struct node *n;
	while(c!=NULL){
	n=c->link;
	c->link=p;
	p=c;
	c=n;  
	}
	*q=p;
	
}
int count(struct node *q)
{
	int c =0;
	
	while(q!=NULL)
	{
		c++;
		q=q->link;
	}
	return c;

}
