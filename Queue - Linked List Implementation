#include<stdio.h>
#include<stdlib.h>

typedef struct node
{
int data;
struct node* next;
}Node;

/* function to insert a node in a circular queue */
void addcirq ( struct node **f, struct node **r, int item )
{
    //Fill your code here
     struct node* temp = (struct node*)malloc(sizeof(struct node));
 temp->data = item;
 if (*f == NULL) {
 *f = temp;
 } else {
 (*r)->next = temp;
 }
 *r = temp;
 (*r)->next = *f;
}

/* function to delete a node in a circular queue */
int delcirq ( struct node **f, struct node **r ) 
{       
   if (*f == NULL) {
 printf("Queue is empty\n");
   return -1000;
  }
 struct node* temp = *f;
 int deleted_item = temp->data;
 if (*f == *r) {
 free(*f);
 *f = NULL;
 *r = NULL;
 } else {
 *f = (*f)->next;
 (*r)->next = *f;
 free(temp);
 }
 return deleted_item;
 
}

void cirq_display ( struct node *f )
{
   if (f == NULL) {
 printf(" {}\n");
 return;
 }
 struct node* temp = f;
 do {
 printf("%d ", temp->data);
 temp = temp->next;
 } while (temp != f);
 printf("\n");
   }
 

int main() 
{
int data,ch, data1;
Node *front=NULL,*rear=NULL;
do
{
printf("Choice 1 : Enter element into Queue\n");
printf("Choice 2 : Delete element from Queue\n");
printf("Choice 3 : Display\n");
printf("Any other choice : Exit\n");
printf("Enter your choice\n");
scanf("%d",&ch);
switch(ch) {
case 1:
printf("Enter the element to be inserted/entered\n");
scanf("%d",&data);
addcirq ( &front, &rear, data );
break;
case 2:
data1 = delcirq ( &front, &rear ); 
if(data1 != -1000)
    printf("The deleted element is %d\n",data1);
break;
case 3:
printf("The contents of the queue are ");
cirq_display ( front );
printf("\n");
break;
}
}while(ch>0 && ch<4);
return 0;
}
